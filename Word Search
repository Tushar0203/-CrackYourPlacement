class Solution {
public:
    bool can(int i,int j,vector<vector<char>>& board, string word,int k,vector<vector<bool>> &vis){
        if(k==word.size()){
            
            return true;
        }
        if(i>=board.size() || j>=board[0].size() || i<0 || j<0 ){
            return false;
        }
        bool flag=false;
       
            if(i>0 && board[i-1][j]==word[k] && !vis[i-1][j]){
                vis[i-1][j]=1;
            flag=(flag||can(i-1,j,board,word,k+1,vis));
            vis[i-1][j]=0;
            }
            
        
        
            if(i<board.size()-1 && board[i+1][j]==word[k]  && !vis[i+1][j]){
                vis[i+1][j]=1;
            flag=(flag||can(i+1,j,board,word,k+1,vis));
             vis[i+1][j]=0;
            }
        
        
            if(j>0 && board[i][j-1]==word[k] && !vis[i][j-1]){
                vis[i][j-1]=1;
            flag=(flag||can(i,j-1,board,word,k+1,vis));
            vis[i][j-1]=0;
            }
        
        
            if(j<board[0].size()-1 && board[i][j+1]==word[k] && !vis[i][j+1]){
                vis[i][j+1]=1;
            flag=(flag||can(i,j+1,board,word,k+1,vis));
            vis[i][j+1]=0;
            }
        
      
        return flag;
    }
    bool exist(vector<vector<char>>& board, string word) {
        vector<vector<bool>> vis(board.size(),vector<bool>(board[0].size(),false));
        bool flag=false;
        int k=0;
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                k=0;
                    if(word[k]==board[i][j]){
                        vis[i][j]=true;
                        
                        flag=(flag||can(i,j,board,word,k+1,vis));
                        
                       vis[i][j]=false;
                    }
                   
                  
                if(flag)break;
            }
            if(flag)break;
        }
        return flag;
    }
};
