class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int ans=0;
        vector<int> lmin,rmin;
        stack<int> st;
        for(int i=0;i<heights.size();i++){
            while(!st.empty() && heights[st.top()]>=heights[i]){
                st.pop();
            }
            if(st.empty()){
                lmin.push_back(-1);
            }else{
                lmin.push_back(st.top());
            }
            st.push(i);
        }
        while(!st.empty()){
            st.pop();
        }
        for(int i=heights.size()-1;i>=0;i--){
            while(!st.empty() && heights[st.top()]>=heights[i]){
                st.pop();
            }
            if(st.empty()){
                rmin.push_back(heights.size());
            }else{
                rmin.push_back(st.top());
            }
            st.push(i);
        }
        reverse(rmin.begin(),rmin.end());
        for(int i=0;i<heights.size();i++){
            ans=max(ans,(rmin[i]-lmin[i]-1)*heights[i]);
        }
        return ans;
    }
};
